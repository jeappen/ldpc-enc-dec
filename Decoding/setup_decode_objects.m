% dvb = getParamsDVBS2Demo_modified(subsystemType, EsNos(index), maxNumLDPCIterations);
% 
% if(needed_coderate>=.25)%0.5 && needed_coderate<.6)
% %     if(isempty(existingDBVs))
%         [dvb.LDPCParityCheckMatrix,ncr]=pseudorand_puncturing_anyrate_no_H_modification(needed_coderate);
% %     else
% %         dvb.LDPCParityCheckMatrix=existingDBVs(1).LDPCParityCheckMatrix;
% %         ncr=existingDBVs(1).rate;
% %     end
%     new_n=size(dvb.LDPCParityCheckMatrix,2);
%     new_m=size(dvb.LDPCParityCheckMatrix,1);
%     
% %     dvb.LDPCParityCheckMatrix(:,10)=sparse(new_m,1); to test H with all
% %     zero column
%     
%     dvb.InterleaveOrder(new_n+1:end)=[];
%     dvb.LDPCCodewordLength=new_n;
% end
% dvb.NumSymsPerCodeword = dvb.LDPCCodewordLength/dvb.BitsPerSymbol;
% 


hLDPCDec = comm.LDPCDecoder(dvb.LDPCParityCheckMatrix, ...
    'IterationTerminationCondition', 'Parity check satisfied', ...
    'MaximumIterationCount',         dvb.LDPCNumIterations, ...
    'NumIterationsOutputPort',       true);
% ,...
%     'FinalParityChecksOutputPort', true,...
%     'DecisionMethod','Soft decision',...
%     'OutputValue','Whole codeword');

hDeintrlv = comm.BlockDeinterleaver(dvb.InterleaveOrder);

hBCHDec = comm.BCHDecoder('CodewordLength', dvb.BCHCodewordLength, ...
    'MessageLength', dvb.BCHMessageLength, ...
    'PrimitivePolynomialSource', 'Property', ...
    'PrimitivePolynomial', dvb.BCHPrimitivePoly, ...
    'GeneratorPolynomialSource', 'Property', ...
    'GeneratorPolynomial', dvb.BCHGeneratorPoly, ...
    'CheckGeneratorPolynomial', false);

hDemodPSK = comm.PSKDemodulator('ModulationOrder', 2^bits_per_symbol, ...
'BitOutput', true, ...
'PhaseOffset', pi/4, ...
 'SymbolMapping', 'Custom', ...
 'CustomSymbolMapping', symb_map, ...
'DecisionMethod', 'Approximate log-likelihood ratio', ...
'Variance', NoiseVars(index));

hDemodQAM = comm.RectangularQAMDemodulator('ModulationOrder',2^dvb.BitsPerSymbol,...
    'BitOutput', true, ...
    'PhaseOffset', 0, ...
...%     'SymbolMapping', 'Custom', ...
...%     'CustomSymbolMapping', symb_mapQAM, ... adjust since Symbol Mapping will differ
    'DecisionMethod', 'Approximate log-likelihood ratio', ...
    'Variance', NoiseVars(index));%,...
     %'NormalizationMethod','Average power'); 
     
     hDemodQAM1 = comm.RectangularQAMDemodulator('ModulationOrder',2^dvb.BitsPerSymbol,...
    'BitOutput', true, ...
    'PhaseOffset', 0, ...
   'SymbolMapping', 'Custom', ...
    'CustomSymbolMapping', symb_mapQAM2, ... adjust since Symbol Mapping will differ
    'DecisionMethod', 'Approximate log-likelihood ratio', ...
    'Variance', NoiseVars(index));
