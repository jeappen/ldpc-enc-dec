%createSimObjDVBS2Demo Create and configure simulation objects for the
%DVB-S.2 MATLAB(R) example commDVBS2WithLDPC

% Copyright 2010-2011 The MathWorks, Inc.

%% BCH Encoder and Decoder
% Create BCH encoder and decoder System objects and configure them
% according to Section 5.3.1 of [1].



hBCHDec = comm.BCHDecoder('CodewordLength', dvb.BCHCodewordLength, ...
    'MessageLength', dvb.BCHMessageLength, ...
    'PrimitivePolynomialSource', 'Property', ...
    'PrimitivePolynomial', dvb.BCHPrimitivePoly, ...
    'GeneratorPolynomialSource', 'Property', ...
    'GeneratorPolynomial', dvb.BCHGeneratorPoly, ...
    'CheckGeneratorPolynomial', false);

%% Block Interleaver and Deinterleaver
% Create block interleaver and deinterleaver System objects and configure
% them according to Section 5.3.3 of [1]. The block interleaver is active
% only for 8PSK modulation.



hDeintrlv = comm.BlockDeinterleaver(dvb.InterleaveOrder);

%% PSK Modulator and Demodulator
% Create PSK modulator and demodulator System objects and configure them
% according to Section 5.4 of [1], which defines custom constellation
% diagrams. You configure the constellation of the objects by setting the
% SymbolMapping property to 'Custom' and the CustomSymbolMapping property
% to the vector that describes the specified constellation.
if(dvb.BitsPerSymbol<4)
hMod   = comm.PSKModulator('ModulationOrder', 2^dvb.BitsPerSymbol, ...
    'BitInput', true, ...
    'PhaseOffset', dvb.PhaseOffset, ...
    'SymbolMapping', 'Custom', ...
    'CustomSymbolMapping', dvb.SymbolMapping);

hDemod = comm.PSKDemodulator('ModulationOrder', 2^dvb.BitsPerSymbol, ...
    'BitOutput', true, ...
    'PhaseOffset', dvb.PhaseOffset, ...
    'SymbolMapping', 'Custom', ...
    'CustomSymbolMapping', dvb.SymbolMapping, ...
    'DecisionMethod', 'Approximate log-likelihood ratio', ...
    'Variance', dvb.NoiseVar);
else
   hMod = comm.RectangularQAMModulator('ModulationOrder',2^dvb.BitsPerSymbol,...
       'BitInput', true, ...
    'PhaseOffset', dvb.PhaseOffset, ...
    'SymbolMapping', 'Custom', ...
    'CustomSymbolMapping', dvb.SymbolMapping,...
    'NormalizationMethod','Average power');
   hDemod = comm.RectangularQAMDemodulator('ModulationOrder',2^dvb.BitsPerSymbol,...
    'BitOutput', true, ...
    'PhaseOffset', dvb.PhaseOffset, ...
    'SymbolMapping', 'Custom', ...
    'CustomSymbolMapping', dvb.SymbolMapping, ...
    'DecisionMethod', 'Approximate log-likelihood ratio', ...
    'Variance', dvb.NoiseVar,...
    'NormalizationMethod','Average power'); 
end


%% Additive White Gaussian Noise (AWGN) Channel
% Create an AWGN channel System object to add additive white Gaussian noise
% to the modulated signal. This simulation defines the noise in terms of
% energy per symbol to noise power spectral density (Es/No) and
% getParamsDVBS2Demo function calculates the corresponding noise variance.
% You need to set NoiseMethod and Variance properties for the object to
% generate the correct amount of noise.

hChan = comm.AWGNChannel('NoiseMethod', 'Variance',...
    'Variance', dvb.NoiseVar);

%% Selected Bibliography
% [1] ETSI Standard EN 302 307 V1.1.1: Digital Video Broadcasting (DVB);
% Second generation framing structure, channel coding and modulation
% systems for Broadcasting, Interactive Services, New Gathering and other
% broadband satellite applications (DVB-S2), European Telecommunications
% Standards Institute, Valbonne, France, 2005-03.
